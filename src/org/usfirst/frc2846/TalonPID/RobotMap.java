// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2846.TalonPID;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.CANTalon;
import edu.wpi.first.wpilibj.CANTalon.FeedbackDevice;
import edu.wpi.first.wpilibj.CANTalon.TalonControlMode;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.PIDController;
import edu.wpi.first.wpilibj.PIDSourceType;
import edu.wpi.first.wpilibj.smartdashboard.*;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static Encoder sRX_PIDQuadratureEncoder1;
    public static CANTalon _talon; //sRX_PIDCANTalon1
    //public static PIDController sRX_PIDPIDController1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        sRX_PIDQuadratureEncoder1 = new Encoder(0, 1, true, EncodingType.k4X);
        LiveWindow.addSensor("SRX_PID", "Quadrature Encoder 1", sRX_PIDQuadratureEncoder1);
        sRX_PIDQuadratureEncoder1.setDistancePerPulse(.1227);// ==3.14159*10/256 (inches)grayhill 10' wheel
        sRX_PIDQuadratureEncoder1.setPIDSourceType(PIDSourceType.kRate);
        _talon = new CANTalon(1);
        LiveWindow.addActuator("SRX_PID", "CAN Talon 1", _talon);
        double P = .1;
        double I = 0;
        double D = 0;
        double ff = 0;        
        int izone = 256;
        double rampRate = 10; 
        int profile = 0;
        int CountPerRev = 256;//****Grayhill
        
  
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        _talon.setFeedbackDevice(FeedbackDevice.QuadEncoder);//is this covered above with the sRX_PIDQuadratureEncoder1   ?????        
        _talon.reverseSensor(true);//is this covered above with the sRX_PIDQuadratureEncoder1   ?????       
        _talon.configNominalOutputVoltage(+0.0d, -0.0d);//Forward/reverse threshold
        _talon.configPeakOutputVoltage(+12.0d, -12.0d); 
        _talon.setPID(P, I, D, ff,izone,rampRate,profile );
        _talon.enable();
        _talon.changeControlMode(TalonControlMode.Speed);
        //_talon.
        _talon.configEncoderCodesPerRev(CountPerRev);//
    }
}
